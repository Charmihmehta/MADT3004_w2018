Last login: Mon Feb  5 12:40:46 on console
20X-iMacXX-M-139:~ macstudent$ GIT
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
20X-iMacXX-M-139:~ macstudent$ pwd
/Users/macstudent
20X-iMacXX-M-139:~ macstudent$ ls
AndroidStudioProjects	Downloads		Pictures
Applications		Library			Public
Desktop			Movies			XamarinData
Documents		Music
20X-iMacXX-M-139:~ macstudent$ cd Downloads ls
20X-iMacXX-M-139:Downloads macstudent$ ls
20X-iMacXX-M-139:Downloads macstudent$ ls
demo
20X-iMacXX-M-139:Downloads macstudent$ git init
Initialized empty Git repository in /Users/macstudent/Downloads/.git/
20X-iMacXX-M-139:Downloads macstudent$ cd .git
20X-iMacXX-M-139:.git macstudent$ cd ..
20X-iMacXX-M-139:Downloads macstudent$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	.DS_Store
	.localized

nothing added to commit but untracked files present (use "git add" to track)
20X-iMacXX-M-139:Downloads macstudent$ git add faculty.swift
fatal: pathspec 'faculty.swift' did not match any files
20X-iMacXX-M-139:Downloads macstudent$ Faculty.swift
-bash: Faculty.swift: command not found
20X-iMacXX-M-139:Downloads macstudent$ Faculty.c
-bash: Faculty.c: command not found
20X-iMacXX-M-139:Downloads macstudent$ add Faculty.c
-bash: add: command not found
20X-iMacXX-M-139:Downloads macstudent$ add Faculty.swift
-bash: add: command not found
20X-iMacXX-M-139:Downloads macstudent$ git add Faculty.swift
fatal: pathspec 'Faculty.swift' did not match any files
20X-iMacXX-M-139:Downloads macstudent$ git add IDisplay.swift
20X-iMacXX-M-139:Downloads macstudent$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   IDisplay.swift

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	.DS_Store
	.localized
	demo/

20X-iMacXX-M-139:Downloads macstudent$ mkdir charmi
20X-iMacXX-M-139:Downloads macstudent$ cd charmi
20X-iMacXX-M-139:charmi macstudent$ git clone https://github.com/pritamworld/MAD3004_W2018.git
Cloning into 'MAD3004_W2018'...
remote: Counting objects: 144, done.
remote: Total 144 (delta 0), reused 0 (delta 0), pack-reused 144
Receiving objects: 100% (144/144), 149.97 KiB | 629.00 KiB/s, done.
Resolving deltas: 100% (7/7), done.
20X-iMacXX-M-139:charmi macstudent$ git commit -m "changes"
[master (root-commit) bfd7ec1] changes
 Committer: MacStudent <macstudent@20X-iMacXX-M-139.local>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 16 insertions(+)
 create mode 100644 IDisplay.swift
20X-iMacXX-M-139:charmi macstudent$ git branch
* master
20X-iMacXX-M-139:charmi macstudent$ git branch dev1
20X-iMacXX-M-139:charmi macstudent$ git branch
  dev1
* master
20X-iMacXX-M-139:charmi macstudent$ git checkout dev1
Switched to branch 'dev1'
20X-iMacXX-M-139:charmi macstudent$ git branch 
* dev1
  master
20X-iMacXX-M-139:charmi macstudent$ 
